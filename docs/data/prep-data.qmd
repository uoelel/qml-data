---
title: "Prepare data"
author: "Stefano Coretta"
editor: visual
---

```{r}
#| label: setup

library(tidyverse)
library(data.table)
```

## Berzak 2025

Data from [OneStop: A 360-Participant English Eye Tracking Dataset with Different Reading Regimes](https://lacclab.github.io/OneStop-Eye-Movements/index.html?utm_source=chatgpt.com#).

```{r}
#| label: fix-dur

fix_dur_file <- "data/berzak2025/fix-dur.csv"

if (!file.exists(fix_dur_file)) {
  fix_full <- fread("bdata/berzak2025/fixations_Paragraph_ordinary.csv")

  fix_dur <- fix_full |> 
    filter(
      article_batch == 1,
      trial_index == 1
    ) |> 
    select(participant_id, trial_index, article_batch, CURRENT_FIX_DURATION, word_length)
  
  write_csv(fix_dur, fix_dur_file)
}

```

## Brentari 2024

Data from *The organization of verb meaning in Lengua de Señas Nicaragüense (LSN): Sequential or simultaneous structures?*

```{r}
#| label: verb-org

verb_org <- read_csv("https://osf.io/download/g7uq5/", col_select = 1:6)

dir.create("data/brentari2024/", showWarnings = FALSE)
write_csv(verb_org, "data/brentari2024/verb_org.csv")
```

## Cameron 2020

Data from *A Cross-Cultural Analysis of Early Prelinguistic Gesture Development and Its Relationship to Language Development*.

```{r}
#| label: gestures

gestures <- read_csv("https://raw.githubusercontent.com/stefanocoretta/infant-gestures/master/data/gestures.csv") |>
  mutate(id = as.numeric(as.factor(paste(dyad, task, gesture))))

dir.create("data/cameron2020/", showWarnings = FALSE)
write_csv(gestures, "data/cameron2020/gestures.csv")
```

## Coretta 2018

```{r}
#| label: formants

f_ita_pol <- read_csv("https://raw.githubusercontent.com/stefanocoretta/coretta2018itapol/master/data-raw/aggregated/formants-series.csv") |>
  select(everything(), gender = sex)

dir.create("./data/coretta2018/", showWarnings = FALSE)
write_csv(f_ita_pol, "data/coretta2018/formants.csv")

```

```{r}
#| label: token-measures

f_mid <- f_ita_pol |>
  filter(time == 5) |>
  select(-time)

token_measures <- read_csv("https://raw.githubusercontent.com/stefanocoretta/coretta2018itapol/master/data-raw/aggregated/token-measures.csv") |>
  select(everything(), gender = sex) |>
  left_join(y = f_mid)

write_csv(token_measures, "./data/coretta2018/token-measures.csv")

```

## Coretta 2022

```{r}
#| label: glot-status

languages <- read_csv("https://raw.githubusercontent.com/glottolog/glottolog-cldf/c8eefe82b4c87f3c566a8e5181bacf714661e18e/cldf/languages.csv")
values <- read_csv("https://raw.githubusercontent.com/glottolog/glottolog-cldf/c8eefe82b4c87f3c566a8e5181bacf714661e18e/cldf/values.csv")

glot_status <- values |>
  filter(Parameter_ID == "aes") |>
  mutate(
    status = str_remove(Code_ID, "aes-"),
    status = factor(status, levels = c("not_endangered", "threatened", "shifting", "moribund", "nearly_extinct", "extinct"))
  ) |>
  left_join(y = languages, by = c("Language_ID" = "ID"))

dir.create("./data/coretta2022/", showWarnings = FALSE)
saveRDS(glot_status, "./data/coretta2022/glot_status.rds")

# glot_med <- values |>
#   filter(Parameter_ID == "med") |>
#   mutate(MED = str_remove(Code_ID, "med-")) |>
#   left_join(y = languages, by = c("Language_ID" = "ID"))
```

## Egurtzegi 2020

```{r}
#| label: eu-vot

eu_vot <- read_csv("https://osf.io/download/hnezg/")

dir.create("data/egurtzegi2020/", showWarnings = FALSE)
write_csv(eu_vot, "data/egurtzegi2020/eu_vot.csv")
```

## Iosad 2020

The Morphology and dialectology in the Linguistic Survey of Scotland contains a portion of the morphological questionnaire returns collected for the Linguistic Survey of Scotland (Gaelic). The data have been transcribed and coded from questionnaire slips by Will Lamb.

Iosad, Pavel & William Lamb. 2020. Morphology and dialectology in the Linguistic Survey of Scotland. OSF. osf.io/4bp2y.

```{r}
#| label: gael-morph

gael_morph <- read_csv("https://osf.io/download/h2vub/")

dir.create("data/iosad2020/", showWarnings = FALSE)
write_csv(gael_morph, "data/iosad2020/gael_morph.csv")
```

## Krajewska 2022

```{r}
#| label: basque-sibil

basque_sibil <- read_csv("https://osf.io/download/cmusw/")

dir.create("data/krajewska2022/", showWarnings = FALSE)
write_csv(basque_sibil, "data/krajewska2022/basque_sibil.csv")
```

## Martin 2020

```{r}
#| label: suff-pref

suff_pref_en <- read_csv("data/martin2020/data_anonymized/English_anon.csv") |>
  mutate(language = "English")
suff_pref_ki <- read_csv("data/martin2020/data_anonymized/Kiitharaka_anon.csv") |>
  mutate(language = "Kiitharaka")

suff_pref <- bind_rows(suff_pref_en, suff_pref_ki)

write_csv(suff_pref, "data/martin2020/suff_pref.csv")
```

## Sluckin 2022

```{r}
#| label: everywhere-loc

everywhere_loc <- read_csv("https://osf.io/download/vaujp/?view_only=edba6a2255044ce6af6a519b85c9e65f") |>
  select(-(Simple:Pass))

dir.create("./data/sluckin2022/")
write_csv(everywhere_loc, file = "./data/sluckin2022/everywhere-loc.csv")
```

## Tucker 2019

```{r}
#| label: mald

mald_file <- "./data/tucker2019/MALD1_1_AllData.Rda"
if (file.exists(mald_file)) {
  cli::cli_alert_success("MALD file found!")
  load(mald_file)
} else {
  cli::cli_alert_warning("MALD file not found! Downloading...")
  dir.create("./data/tucker2019/", showWarnings = FALSE)
  download.file(
    "https://era.library.ualberta.ca/items/3344343b-2b4a-4b8c-af8e-8bd829c76472/view/eada02c5-6259-4225-8204-13ce86e1cd2d/MALD1_1_AllData.Rda",
   mald_file 
  )
  load(mald_file)
}

set.seed(943874)

subj <- sample(unique(dat$Subject), 50)

mald_1_1 <- dat |>
  filter(Subject %in% subj, RT > 0) |>
  select(Subject, Item, IsWord, PhonLev, RT, ACC) |>
  mutate(
    IsWord = factor(IsWord, levels = c("TRUE", "FALSE")),
    ACC = ifelse(ACC, "correct", "incorrect"),
    ACC = factor(ACC, levels = c("incorrect", "correct")),
    RT_log = log(RT)
  ) |>
  group_by(Subject) |>
  slice_sample(n = 100) |>
  ungroup()

saveRDS(mald_1_1, "data/tucker2019/mald_1_1.rds")
```

## Winter 2012

```{r}
#| label: polite

polite <- read_csv("https://raw.githubusercontent.com/learnB4SS/learnB4SS/main/data-raw/polite.csv") |>
  arrange(index) |>
  select(-index, -years_in_ger)

dir.create("data/winter2012/", showWarnings = FALSE)
write_csv(polite, "data/winter2012/polite.csv")
```

## Zip data

```{r}
#| label: zip-data

zip("data.zip", "data")

```
